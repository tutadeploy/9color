services:
  # Nginx反向代理 - 处理URL重写
  nginx-proxy:
    image: nginx:alpine
    platform: linux/arm64
    container_name: 9color-nginx-proxy-m1
    ports:
      - "8080:80" # 对外暴露8080端口
    volumes:
      - ./docker-config/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./docker-config/nginx-dev.conf:/etc/nginx/conf.d/default.conf:ro
    depends_on:
      - php-dev
    networks:
      - 9color-dev

  # PHP开发环境 (M芯片优化)
  php-dev:
    build:
      context: ..
      dockerfile: dev-docker/Dockerfile.dev
    platform: linux/arm64
    container_name: 9color-php-dev-m1
    ports:
      - "8081:8080" # PHP内置服务器（内部端口）
      - "8082:80" # Apache（内部端口）
      - "8000:8000" # 可选的开发端口
    volumes:
      # 挂载整个项目目录，实现热重载
      - ..:/var/www/html
      # 挂载composer缓存 (M芯片路径)
      - ~/.composer:/home/www-data/.composer
    environment:
      - PHP_IDE_CONFIG=serverName=9color
      - XDEBUG_CONFIG=client_host=host.docker.internal
      - XDEBUG_MODE=debug
    networks:
      - 9color-dev
    working_dir: /var/www/html
    # 使用host网络模式连接宿主机上的MySQL（docker-deploy）
    extra_hosts:
      - "host.docker.internal:host-gateway"

networks:
  9color-dev:
    driver: bridge
# volumes: 不再需要，使用docker-deploy的数据库 